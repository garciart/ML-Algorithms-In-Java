theta[][] - outer loop
x[][] - middle loop
y[] - inner loop


1. Calculate the number of rows in x[][] -> store in m

2. Calculate the hypothesis for each row of x[][] by first multiplying each value in the row by each value in the corresponding row of theta[], and then summing up the products. Use 1 for all values of x[n][0] -> store in h[]

3. Calculate the difference between h(x) and y -> store in residual[]

4. Square the difference between h(x) and y -> store in squaredResidual[]

5. Sum the residuals -> store in sumOfSquares

6. For linear regression, (1 / (2 * m)) * sumOfSquares

7. 

Linear Regression
Housing prices
The median list price per square foot in the United States in 2018 is $151.
500 sqft = $75,500 (actual y[1])
1000 sqft = $151,000 (actual y[2])
theta0 (actual b) = 500
theta1 (actual m) = 151

theta0	theta1	x0	x1	h
0	151	1	500	75500
0	151	1	1000	151000
0	151	1	2000	302000
0	151	1	4000	604000
0	149	1	500	74500
0	149	1	1000	149000
0	149	1	2000	298000
0	149	1	4000	596000
0	153	1	500	76500
0	153	1	1000	153000
0	153	1	2000	306000
0	153	1	4000	612000
0	100	1	500	50000
0	100	1	1000	100000
0	100	1	2000	200000
0	100	1	4000	400000

    /**
     * x represents the set of independent variables, known as the set of features.
     * In this case, there is only one, a house's square footage.
     */
    public static Double[][] xMatrix = {{0.0, 500.0},
                                        {0.0, 1000.0},
                                        {0.0, 2000.0},
                                        {0.0, 4000.0}};

    /**
     * y represents the dependent variable, known as the output feature.
     * In this case, the actual price of the house based on the square footage ($151 per square foot in 2018).
     */
    public static Double[] yVector = {75500.0, 151000.0, 302000.0, 604000.0};

    /**
     * theta represents the slope of each feature (x) in the set.
     * In this case, the slope of the house's square footage values.
     */
    public static Double[][] thetaMatrix = {{0.0, 151.0},
                                            {0.0, 149.0},
                                            {0.0, 153.0}};
    
    /**
     * mActual is the slope of (x, y): 151/1
     */
    public static Double mActual = 151.0;
    
    /**
     * bActual is the y-intercept for (x, y): 0
     */
    public static Double bActual = 0.0;








Airline prices
/**
 * x1 = Day of the week (1-7)
 * 1 = Sunday, 2 = Monday, 3 = Tuesday, 4 = Wednesday, 5 = Thursday, 6 = Friday, 7 = Saturday
 */
public static int[] x1 = {1, 2, 3, 4, 5, 6, 7};

/**
 * y values for univariate calculations using day of the week
   x |  y
   1 | $420
   2 | $400
   3 | $380
   4 | $360
   5 | $390
   6 | $390
   7 | $400
 */ 

/**
 * x2 = Hour of the day (00-23)
 * 0 = Midnight - 1am, 1 = 1am - 2am, ..., 22 = 10pm - 11pm, 23 = 11pm - Midnight
 */
public static int[] x2 = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23};

/**
 * x3 = Airline (7 airlines, numbered 1-17)
 * 1 = American Airlines
 * 2 = United Airlines
 * 3 = Delta Air Lines
 * 4 = Southwest Airlines
 * 5 = Alaska Airlines
 * 6 = JetBlue
 * 7 = Spirit Airlines
 */
public static int[] x3 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

/**
 * x4 = Airport (15 airports, numbered 1-15)
 * 1 = ATL (Atlanta-Hartsfield–Jackson, GA),
 * 2 = LAX (Los Angeles, CA),
 * 3 = ORD (Chicago-O'Hare, IL),
 * 4 = DFW (Dallas-Fort Worth, TX),
 * 5 = DEN (Denver, CO),
 * 6 = JFK (New York-Kennedy, NY),
 * 7 = SFO (San Francisco, CA),
 * 8 = LAS (Las Vegas-McCarran, NV),
 * 9 = SEA (Seattle-Tacoma, WA),
 * 10 = CLT (Charlotte-Douglas, NC)
 * 11 = MCO (Orlando, FL)
 * 12 = MIA (Miami-Dade, FL)
 * 13 = PHX (Phoenix Sky Harbor, AZ)
 * 14 = EWR (Newark Liberty, NJ)
 * 15 = IAH (Houston-Bush, TX)
 */
public static int[] x4 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};

/**
 * x5 = Destination (15 destinations, numbered 1-15)
 * 1 = ATL (Atlanta-Hartsfield–Jackson, GA),
 * 2 = LAX (Los Angeles, CA),
 * 3 = ORD (Chicago-O'Hare, IL),
 * 4 = DFW (Dallas-Fort Worth, TX),
 * 5 = DEN (Denver, CO),
 * 6 = JFK (New York-Kennedy, NY),
 * 7 = SFO (San Francisco, CA),
 * 8 = LAS (Las Vegas-McCarran, NV),
 * 9 = SEA (Seattle-Tacoma, WA),
 * 10 = CLT (Charlotte-Douglas, NC)
 * 11 = MCO (Orlando, FL)
 * 12 = MIA (Miami-Dade, FL)
 * 13 = PHX (Phoenix Sky Harbor, AZ)
 * 14 = EWR (Newark Liberty, NJ)
 * 15 = IAH (Houston-Bush, TX)
 */
public static int[] x5 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};

/**
 * x6 = Season (1-4)
 * 1 = Winter, 2 = Spring, 3 = Summer, 4 = Fall
 */
public static int[] x6 = {1, 2, 3, 4};

/**
 * x7 = Days in advance (1-30)
 */
public static int[] x7 = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
 